---
interface Props {
	title: string;
	description?: string;
}

const { title, description = "drodol's personal website" } = Astro.props;
const pageTitle = title === 'Home' ? '@drodol' : `${title} | @drodol`;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description}>
		<meta name="viewport" content="width=device-width" />

		<!-- Favicon -->
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">
		<link rel="shortcut icon" href="/favicon.ico">

		<meta name="generator" content={Astro.generator} />
		<title>{pageTitle}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Instrument+Serif:ital@0;1&display=swap" rel="stylesheet">

		<script>
			// On page load or when changing themes, best to add inline in `head` to avoid FOUC
			if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark')
			} else {
				document.documentElement.classList.remove('dark')
			}
		</script>
		<script defer data-domain="drodol.com" src="https://plausible.drodol.com/js/script.hash.outbound-links.tagged-events.js"></script>
		<script>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>

	</head>
	<body class="min-h-screen bg-medium-bg text-medium-text font-sans antialiased">
		<header class="sticky top-0 bg-medium-bg/95 backdrop-blur-sm border-b border-medium-border z-50">
			<div class="max-w-medium-wide mx-auto px-6">
				<div class="flex justify-between items-center py-4" x-data="{ isOpen: false }">
					<!-- Logo -->
					<a href="/" class="text-xl font-serif font-bold text-medium-text hover:text-medium-accent transition-colors">@drodol</a>

					<!-- Desktop Navigation -->
					<nav class="hidden md:flex items-center space-x-8">
						<a href="/" class="text-medium-text hover:text-medium-accent transition-colors text-sm">Home</a>
						<a href="/about" class="text-medium-text hover:text-medium-accent transition-colors text-sm">About</a>
						<a href="/blog" class="text-medium-text hover:text-medium-accent transition-colors text-sm">Blog</a>
						<a href="/now" class="text-medium-text hover:text-medium-accent transition-colors text-sm">Now</a>
						<a href="/uses" class="text-medium-text hover:text-medium-accent transition-colors text-sm">Uses</a>
						<a href="/contact" class="text-medium-text hover:text-medium-accent transition-colors text-sm">Contact</a>
					</nav>

					<!-- Mobile Menu Button -->
					<button
						class="md:hidden text-medium-text hover:text-medium-accent transition-colors"
						@click="isOpen = !isOpen"
						aria-label="Toggle menu"
					>
						<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" x-show="!isOpen"/>
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" x-show="isOpen"/>
						</svg>
					</button>

					<!-- Mobile Menu -->
					<div
						x-show="isOpen"
						x-transition:enter="transition ease-out duration-200"
						x-transition:enter-start="opacity-0 -translate-y-4"
						x-transition:enter-end="opacity-100 translate-y-0"
						x-transition:leave="transition ease-in duration-150"
						x-transition:leave-start="opacity-100 translate-y-0"
						x-transition:leave-end="opacity-0 -translate-y-4"
						class="absolute top-full left-0 right-0 bg-medium-bg border-b border-medium-border md:hidden"
					>
						<nav class="flex flex-col space-y-4 p-6">
							<a href="/" class="text-medium-text hover:text-medium-accent transition-colors">Home</a>
							<a href="/about" class="text-medium-text hover:text-medium-accent transition-colors">About</a>
							<a href="/blog" class="text-medium-text hover:text-medium-accent transition-colors">Blog</a>
							<a href="/now" class="text-medium-text hover:text-medium-accent transition-colors">Now</a>
							<a href="/uses" class="text-medium-text hover:text-medium-accent transition-colors">Uses</a>
							<a href="/contact" class="text-medium-text hover:text-medium-accent transition-colors">Contact</a>
						</nav>
					</div>
				</div>
			</div>
		</header>

		<main class="py-12">
			<div class="max-w-medium mx-auto px-6">
				<slot />
			</div>
		</main>
	</body>
</html>

<script>
	document.addEventListener('alpine:init', () => {
		Alpine.store('darkMode', {
			isDark: document.documentElement.classList.contains('dark'),
			toggle() {
				this.isDark = !this.isDark;
				localStorage.theme = this.isDark ? 'dark' : 'light';
				if (this.isDark) {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
			},
		});
	});
</script>
